---
AWSTemplateFormatVersion: "2010-09-09"
Description: >
  Udacity Capstone Project - EKS Cluster Stack
Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String
    Default: UdacityCapstone
Resources:
  ControlPlane:
    Type: AWS::EKS::Cluster
    Properties:
      Name: udacity-cluster
      ResourcesVpcConfig:
        SecurityGroupIds:
          - Ref: ControlPlaneSecurityGroup
        SubnetIds:
          Fn::Split:
            - ","
            - Fn::ImportValue: !Sub ${EnvironmentName}-SubnetIDs
      RoleArn:
        Fn::GetAtt:
          - ClusterServiceRole
          - Arn
      Version: "1.19"

  ControlPlaneSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Cluster communication with worker nodes
      VpcId:
        Fn::ImportValue: !Sub "${EnvironmentName}-VPCID"
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-ControlPlaneSecurityGroup"

  ClusterSharedNodeSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Communication between all nodes in the cluster
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-ClusterSharedNodeSecurityGroup"
      VpcId:
        Fn::ImportValue: !Sub "${EnvironmentName}-VPCID"

  ClusterServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service: eks.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
        - arn:aws:iam::aws:policy/AmazonEKSVPCResourceController
      Tags:
        - Key: Name
          Value:
            Fn::Sub: "${AWS::StackName}-ClusterServiceRole"

  PolicyELBPermissions:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ec2:DescribeAccountAttributes
              - ec2:DescribeAddresses
              - ec2:DescribeInternetGateways
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName:
        Fn::Sub: "${AWS::StackName}-PolicyELBPermissions"
      Roles:
        - Ref: ClusterServiceRole

  PolicyCloudWatchMetrics:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - cloudwatch:PutMetricData
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName:
        Fn::Sub: "${AWS::StackName}-PolicyCloudWatchMetrics"
      Roles:
        - Ref: ClusterServiceRole

  IngressClusterToNodeSG:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description:
        Allow managed and unmanaged nodes to communicate with each other
        (all ports)
      FromPort: 0
      GroupId:
        Ref: ClusterSharedNodeSecurityGroup
      IpProtocol: "-1"
      SourceSecurityGroupId:
        Fn::GetAtt:
          - ControlPlane
          - ClusterSecurityGroupId
      ToPort: 65535

  IngressInterNodeGroupSG:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allow nodes to communicate with each other (all ports)
      FromPort: 0
      GroupId:
        Ref: ClusterSharedNodeSecurityGroup
      IpProtocol: "-1"
      SourceSecurityGroupId:
        Ref: ClusterSharedNodeSecurityGroup
      ToPort: 65535

  IngressNodeToDefaultClusterSG:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allow unmanaged nodes to communicate with control plane (all ports)
      FromPort: 0
      GroupId:
        Fn::GetAtt:
          - ControlPlane
          - ClusterSecurityGroupId
      IpProtocol: "-1"
      SourceSecurityGroupId:
        Ref: ClusterSharedNodeSecurityGroup
      ToPort: 65535

Outputs:
  ClusterSecurityGroupId:
    Value:
      Fn::GetAtt:
        - ControlPlane
        - ClusterSecurityGroupId
    Export:
      Name: !Sub ${EnvironmentName}-ClusterSecurityGroupId

  SharedNodeSecurityGroup:
    Value: !Ref ClusterSharedNodeSecurityGroup
    Export:
      Name: !Sub "${EnvironmentName}-SharedNodeSecurityGroup"
  
  K8SApiEndpoint:
    Value:
      Fn::GetAtt:
      - ControlPlane
      - Endpoint
    Export:
      Name: !Sub "${EnvironmentName}-K8S-Endpoint"

  OpenIdConnectIssuerUrl:
    Value:
      !Select [1, !Split ["//", !GetAtt ControlPlane.OpenIdConnectIssuerUrl]]
    Export:
      Name: !Sub "${EnvironmentName}-K8S-OIDC"
